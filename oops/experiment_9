#include <iostream>
using namespace std;

class Complex {
private:
    double real, imaginary;

public:
    Complex() : real(0), imaginary(0) {}
    Complex(double r, double i) : real(r), imaginary(i) {}

    Complex operator+(const Complex& c) {
        return Complex(real + c.real, imaginary + c.imaginary);
    }

    Complex operator-(const Complex& c) {
        return Complex(real - c.real, imaginary - c.imaginary);
    }

    friend ostream& operator<<(ostream& out, const Complex& c) {
        out << c.real << " + " << c.imaginary << "i";
        return out;
    }

    friend istream& operator>>(istream& in, Complex& c) {
        in >> c.real >> c.imaginary;
        return in;
    }
};

int main() {
    Complex c1(3.4, 5.6), c2(1.2, 2.3);
    Complex sum = c1 + c2;
    Complex diff = c1 - c2;

    cout << "Complex 1: " << c1 << endl;
    cout << "Complex 2: " << c2 << endl;
    cout << "Sum: " << sum << endl;
    cout << "Difference: " << diff << endl;

    Complex c3;
    cout << "Enter a complex number (real imaginary): ";
    cin >> c3;
    cout << "You entered: " << c3 << endl;

    return 0;
}
